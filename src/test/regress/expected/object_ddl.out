create table foo (t text not null, i serial primary key, check (t > 'a'));
create temp table bar (t text not null) on commit delete rows;
\pset format unaligned
select pg_get_table_ddl('foo');
pg_get_table_ddl
CREATE TABLE public.foo
(
    t text NOT NULL,
    i integer NOT NULL DEFAULT nextval('foo_i_seq'::regclass),
    CONSTRAINT foo_t_check CHECK ((t > 'a'::text)),
    PRIMARY KEY (i)
);
(1 row)
select pg_get_table_ddl('bar');
pg_get_table_ddl
CREATE TEMPORARY TABLE bar
(
    t text NOT NULL
) ON COMMIT DELETE ROWS;
(1 row)
CREATE TABLE test_part_parent (
    a integer DEFAULT 2501,
    b integer DEFAULT 142857
)
PARTITION BY LIST (a);
create table test_part_partition_123 partition of test_part_parent for values in (1,2,3);
create table test_part_partition_def partition of test_part_parent default;
select pg_get_table_ddl('test_part_parent');
pg_get_table_ddl
CREATE TABLE public.test_part_parent
(
    a integer DEFAULT 2501,
    b integer DEFAULT 142857
) PARTITION BY LIST (a);
(1 row)
select pg_get_table_ddl('test_part_partition_123');
pg_get_table_ddl
CREATE TABLE public.test_part_partition_123 PARTITION OF public.test_part_parent FOR VALUES IN (1, 2, 3);
(1 row)
select pg_get_table_ddl('test_part_partition_def');
pg_get_table_ddl
CREATE TABLE public.test_part_partition_def PARTITION OF public.test_part_parent DEFAULT;
(1 row)
drop table foo;
drop table bar;
